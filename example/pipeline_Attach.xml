<remus_pipeline id="testPipeline">
<include path="test.file"/>
<remus_split id="testSplit" type="python" input="?">
<![CDATA[
@remus.splitter
def split( info ):
	i = 0
	varList = [ 'var1', 'var2', 'var3', 'var4' ]
	for var in varList:
		handle = remus.open( var, "test.file", "w" )
		for j in range( info['lineCount'] ):
			handle.write( "%s test line %d = %s\n" % ( var, i, info['infoText'] ) )
			i += 1
		handle.close()
		remus.emit( var, "test.file" )
]]>
</remus_split>

<remus_map id="testMap" type="python" input="testSplit">
<![CDATA[
import hashlib
@remus.mapper
def map( key, val ):
	iHandle = remus.open( key, "test.file" )
	oHandle = remus.open( key + key, "out.file", "w" )
	for line in iHandle:
		oHandle.write("%s\n" % (line) )		
		oHandle.write("%s\n" % (hashlib.sha224(line).hexdigest()) )
	remus.emit( key+key, "out.file" )
	iHandle.close()
	oHandle.close()
]]>
</remus_map>



</remus_pipeline>
