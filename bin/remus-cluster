#!/usr/bin/env python

import sys
import subprocess
import os

def sshCall(host, cmd):
	p = subprocess.Popen("ssh " + host + " " + cmd, shell=True, stdout=subprocess.PIPE)
	return p.communicate()[0]
	
if __name__ == "__main__":
	base = os.path.dirname(os.path.dirname(os.path.abspath( __file__ )))
	hostFile = os.path.join(base, "conf", "host.conf")
	handle = open(hostFile)
	mConf = {}
	for line in handle:
		tmp = line.rstrip().split('\t')
		if tmp[0] not in mConf:
			mConf[tmp[0]] = []
		mConf[tmp[0]].append(tmp[1])
	handle.close()
	
	mode = sys.argv[1]
	
	if mode == "status":
		for host in mConf:
			for proc in mConf[host]:
				print sshCall(host, "%s/bin/remus -n %s_%s -status" % (base, host, proc)).rstrip()
	
	if mode == "start":
		for host in mConf:
			for proc in mConf[host]:
				sshCall(host, "%s/bin/remus -n %s_%s -d %s/conf/%s.yaml" % (base, host, proc, base, proc))

	if mode == "stop":
		for host in mConf:
			for proc in mConf[host]:
				sshCall(host, "%s/bin/remus -n %s_%s -d -stop" % (base, host, proc))
